namespace com.teracloud.streams.s2t_wenet;

/**
 * WebSocketSink operator for sending data to a WebSocket endpoint
 * 
 * This operator sends data to a WebSocket endpoint, useful for streaming
 * transcription results to web clients.
 * 
 * @input In: Stream of data to send over WebSocket
 * 
 * @param websocketUrl: The WebSocket URL to connect to
 * @param format: The format to use for serializing tuples (json, xml, csv)
 * @param reconnect: Whether to automatically reconnect on disconnection
 * @param reconnectInterval: The interval between reconnection attempts in seconds
 */
public composite WebSocketSink(input In) {
    param
        expression<rstring> $websocketUrl;
        expression<rstring> $format: "json";
        expression<boolean> $reconnect: true;
        expression<float64> $reconnectInterval: 5.0; // seconds
    
    graph
        // Implementation using a WebSocket sink
        
        // In a real implementation, this would use actual WebSocket output
        // For demonstration purposes, we'll use a custom sink
        () as Sink = Custom(In) {
            logic onTuple In: {
                // Convert tuple to the specified format
                mutable rstring serializedData;
                if ($format == "json") {
                    // Example JSON serialization (simplified)
                    serializedData = "{";
                    boolean first = true;
                    
                    // Add each attribute to the JSON
                    <% 
                    # This SPL to add attribute serialization would be filled in by the SPL compiler
                    # For demonstration, we'll use a simple placeholder
                    %>
                    
                    serializedData += "}";
                } else if ($format == "xml") {
                    // XML serialization
                    serializedData = "<data>";
                    // Add each attribute to the XML
                    serializedData += "</data>";
                } else {
                    // Default to simple text format
                    serializedData = "Data from tuple";
                }
                
                // In a real implementation, this would send the data over WebSocket
                printStringLn("Would send to WebSocket: " + serializedData);
            }
        }
        
        /**
         * In an actual implementation, this would use:
         * 
         * () as Sink = WebSocketSink(In) {
         *     param
         *         url: $websocketUrl;
         *         format: $format;
         *         reconnect: $reconnect;
         *         reconnectInterval: $reconnectInterval;
         * }
         */
}