// Additional includes for WenetSTT operator
#include "../../impl/include/WenetSTTWrapper.hpp"
#include <memory>

<%SPL::CodeGen::headerPrologue($model);%>

class MY_OPERATOR : public MY_BASE_OPERATOR 
{
public:
    // Constructor
    MY_OPERATOR();
    
    // Destructor
    virtual ~MY_OPERATOR();
    
    // Tuple processing for non-mutating ports
    void process(Tuple const & tuple, uint32_t port);
    
    // Punctuation processing
    void process(Punctuation const & punct, uint32_t port);
    
private:
    // Mutex for thread safety
    SPL::Mutex _mutex;
    
    // Configuration
    wenet_streams::WenetSTTWrapper::Config config_;
    
    // WeNet-based implementation
    std::unique_ptr<wenet_streams::WenetSTTWrapper> wenet_impl_;
    
    // State tracking
    bool initialized_;
    uint64_t audio_timestamp_ms_;
    uint64_t total_samples_processed_;
    
    // Helper methods
    void initialize();
    void processAudioData(const SPL::blob& audio_blob);
    void submitResult(const wenet_streams::WenetSTTWrapper::TranscriptionResult& result);
};

<%SPL::CodeGen::headerEpilogue($model);%>