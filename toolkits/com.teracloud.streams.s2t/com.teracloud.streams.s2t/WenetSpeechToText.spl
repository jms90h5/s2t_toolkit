namespace com.teracloud.streams.s2t;

use com.teracloud.streams.s2t::WenetSTT;

/**
 * WenetSpeechToText operator for real-time speech-to-text transcription
 * 
 * This operator provides a high-level SPL wrapper around the C++ primitive WenetSTT operator.
 * It transcribes streaming audio data into text in real-time, with support for partial and final results.
 * 
 * @input AudioStream: Stream of audio chunks with timestamps
 * @output TranscriptionStream: Stream of transcription results
 * 
 * @param modelPath: Path to the WeNet model directory
 * @param sampleRate: The sample rate of the input audio in Hz
 * @param partialResultsEnabled: Whether to emit partial results as they become available
 * @param maxLatency: Maximum latency in seconds for real-time transcription
 * @param vad: Enable Voice Activity Detection
 * @param vadSilenceThreshold: Silence threshold for VAD in dB
 * @param vadSpeechThreshold: Speech threshold for VAD in dB
 * @param maxChunkDuration: Maximum duration of audio chunks to process in seconds
 */
public composite WenetSpeechToText(
    input stream<tuple<blob audioChunk, uint64 audioTimestamp>> AudioStream; 
    output stream<tuple<rstring text, boolean isFinal, float64 confidence>> TranscriptionStream) 
{
    param
        expression<rstring> $modelPath;
        expression<int32> $sampleRate: 16000;
        expression<int32> $chunkSize: 16;
        expression<int32> $nbest: 1;
        expression<int32> $numThreads: 1;
    
    graph
        stream<tuple<rstring text, boolean isFinal, float64 confidence>> TranscriptionStream = 
            WenetSTT(AudioStream) {
            param
                modelPath: $modelPath;
                sampleRate: $sampleRate;
                chunkSize: $chunkSize;
                nbest: $nbest;
                numThreads: $numThreads;
        }
}