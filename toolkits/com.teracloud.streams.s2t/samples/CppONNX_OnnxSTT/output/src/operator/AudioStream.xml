<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <context>
    <kind>spl.utility::Beacon</kind>
    <class>AudioStream</class>
    <operatorModelDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl/spl/utility/Beacon</operatorModelDirectory>
    <applicationDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/CppONNX_OnnxSTT</applicationDirectory>
    <dataDirectory/>
    <outputDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/CppONNX_OnnxSTT/output</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>ONNXDemo</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/CppONNX_OnnxSTT</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.teracloud.streams.s2t</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t</rootDirectory>
        <index>2</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>streamsx.health</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/streamsx.health</rootDirectory>
        <index>3</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/BWS8pWC_1HYKrTViSTcG4T5GFz_0nGxqvmNlrajI9k_1E5zHNl9YbvsoTe9P3EfS_0f6OzRd8ZZzCJBaSXCG5A8XGA6.h"</include>
    </includes>
    <stateVariables/>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>100</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0.1</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::rstring</cppType>
        <splType>rstring</splType>
        <value>"MockAudioData"</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>1000</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>ONNXRealtime.spl</file>
      <line>17</line>
      <column>9</column>
    </sourceLocation>
    <productVersion>7.2.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>
  <parameters>
    <parameter>
      <name>iterations</name>
      <values>
        <value>
          <cppType>SPL::uint32</cppType>
          <splType>uint32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$0</cppExpression>
          <splExpression>100</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>ONNXRealtime.spl</file>
            <line>19</line>
            <column>29</column>
          </sourceLocation>
        </value>
      </values>
      <sourceLocation>
        <file>ONNXRealtime.spl</file>
        <line>19</line>
        <column>17</column>
      </sourceLocation>
    </parameter>
    <parameter>
      <name>period</name>
      <values>
        <value>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$1</cppExpression>
          <splExpression>0.1</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <parameterExpressionMode>AttributeFree</parameterExpressionMode>
          <sourceLocation>
            <file>ONNXRealtime.spl</file>
            <line>20</line>
            <column>25</column>
          </sourceLocation>
        </value>
      </values>
      <sourceLocation>
        <file>ONNXRealtime.spl</file>
        <line>20</line>
        <column>17</column>
      </sourceLocation>
    </parameter>
  </parameters>
  <inputPorts/>
  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BWS8pWC_1HYKrTViSTcG4T5GFz_0nGxqvmNlrajI9k_1E5zHNl9YbvsoTe9P3EfS_0f6OzRd8ZZzCJBaSXCG5A8XGA6</tupleCppType>
      <tupleSPLType>tuple&lt;blob audio,uint64 audioTimestamp&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>false</mutationAllowed>
      <sourceLocation>
        <file>ONNXRealtime.spl</file>
        <line>17</line>
        <column>9</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>audio</name>
          <cppType>SPL::blob</cppType>
          <splType>blob</splType>
          <assignment>
            <sourceLocation>
              <file>ONNXRealtime.spl</file>
              <line>22</line>
              <column>30</column>
            </sourceLocation>
            <outputFunction>AsIs</outputFunction>
            <values>
              <value>
                <cppType>SPL::blob</cppType>
                <splType>blob</splType>
                <hasRuntimeConstant>true</hasRuntimeConstant>
                <cppExpression>::SPL::spl_cast&lt;SPL::blob, SPL::rstring &gt;::cast(lit$2)</cppExpression>
                <splExpression>(blob)("MockAudioData")</splExpression>
                <hasFunctions>false</hasFunctions>
                <hasSideEffects>false</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>ONNXRealtime.spl</file>
                  <line>22</line>
                  <column>38</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
        <attribute>
          <name>audioTimestamp</name>
          <cppType>SPL::uint64</cppType>
          <splType>uint64</splType>
          <assignment>
            <sourceLocation>
              <file>ONNXRealtime.spl</file>
              <line>23</line>
              <column>28</column>
            </sourceLocation>
            <outputFunction>AsIs</outputFunction>
            <values>
              <value>
                <cppType>SPL::uint64</cppType>
                <splType>uint64</splType>
                <hasRuntimeConstant>true</hasRuntimeConstant>
                <cppExpression>::SPL::spl_cast&lt;SPL::uint64, SPL::float64 &gt;::cast((::SPL::Functions::Time::getTimestampInSecs() * lit$3))</cppExpression>
                <splExpression>(uint64)((getTimestampInSecs() * 1000))</splExpression>
                <hasFunctions>true</hasFunctions>
                <hasSideEffects>true</hasSideEffects>
                <readsState>false</readsState>
                <hasStreamAttributes>false</hasStreamAttributes>
                <sourceLocation>
                  <file>ONNXRealtime.spl</file>
                  <line>23</line>
                  <column>45</column>
                </sourceLocation>
              </value>
            </values>
          </assignment>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="audio" type="blob"/>
        <tt:attr name="audioTimestamp" type="uint64"/>
      </tuple>
      <finalPunctuationPortScope/>
      <exceptionPort>false</exceptionPort>
    </outputPort>
  </outputPorts>
  <exceptionPorts/>
</operatorInstanceModel>
