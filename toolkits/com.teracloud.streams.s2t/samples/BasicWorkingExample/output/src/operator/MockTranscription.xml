<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<operatorInstanceModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator/instance" xmlns:an="http://www.ibm.com/xmlns/prod/streams/spl/annotation" xmlns:tt="http://www.ibm.com/xmlns/prod/streams/spl/tupleType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <context>
    <kind>spl.utility::Custom</kind>
    <class>MockTranscription</class>
    <operatorModelDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl/spl/utility/Custom</operatorModelDirectory>
    <applicationDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/BasicWorkingExample</applicationDirectory>
    <dataDirectory/>
    <outputDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/BasicWorkingExample/output</outputDirectory>
    <toolkits>
      <toolkit isCurrentToolkit="false">
        <name>BasicWorkingExample</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t/samples/BasicWorkingExample</rootDirectory>
        <index>0</index>
      </toolkit>
      <toolkit isCurrentToolkit="true">
        <name>spl</name>
        <rootDirectory>/homes/jsharpe/teracloud/streams/7.2.0.0/toolkits/spl</rootDirectory>
        <index>1</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>com.teracloud.streams.s2t</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/com.teracloud.streams.s2t</rootDirectory>
        <index>2</index>
      </toolkit>
      <toolkit isCurrentToolkit="false">
        <name>streamsx.health</name>
        <rootDirectory>/homes/jsharpe/teracloud/toolkits/streamsx.health</rootDirectory>
        <index>3</index>
      </toolkit>
    </toolkits>
    <optimized>true</optimized>
    <verbose>false</verbose>
    <networkByteOrdering>false</networkByteOrdering>
    <codeBeautification>false</codeBeautification>
    <includes>
      <include>"../type/BWS8pWC_1HYKrTViSTcG4T5GFz_0nGxqvmNlrajI9k_1E5zHNl9YbvsoTe9P3EfS_0f6OzRd8ZZzCJBaSXCG5A8XGA6.h"</include>
      <include>"../type/BpSUw8mfEcWf02DHxFXcAEfeiSinvo2iyOrm4KEfBRvnHy4jMGnM6au_0nCr0kf7SJp_1QitTcsqIopJSCi7aPgAg.h"</include>
    </includes>
    <stateVariables>
      <stateVariable>
        <name>state$counter</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>
          <cppType>SPL::int32</cppType>
          <splType>int32</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$5</cppExpression>
          <splExpression>0</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>BasicDemo.spl</file>
            <line>55</line>
            <column>45</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>BasicDemo.spl</file>
          <line>55</line>
          <column>35</column>
        </sourceLocation>
      </stateVariable>
      <stateVariable>
        <name>state$demoTexts</name>
        <cppType>SPL::list&lt;SPL::rstring &gt;</cppType>
        <splType>list&lt;rstring&gt;</splType>
        <value>
          <cppType>SPL::list&lt;SPL::rstring &gt;</cppType>
          <splType>list&lt;rstring&gt;</splType>
          <hasRuntimeConstant>true</hasRuntimeConstant>
          <cppExpression>lit$6</cppExpression>
          <splExpression>["Hello", "Hello world", "Hello world this", "Hello world this is", "Hello world this is a", "Hello world this is a demo", "This is working", "Speech recognition", "Speech recognition toolkit", "Demo complete"]</splExpression>
          <hasFunctions>false</hasFunctions>
          <hasSideEffects>false</hasSideEffects>
          <readsState>false</readsState>
          <hasStreamAttributes>false</hasStreamAttributes>
          <sourceLocation>
            <file>BasicDemo.spl</file>
            <line>56</line>
            <column>47</column>
          </sourceLocation>
        </value>
        <sourceLocation>
          <file>BasicDemo.spl</file>
          <line>56</line>
          <column>35</column>
        </sourceLocation>
      </stateVariable>
    </stateVariables>
    <runtimeConstants>
      <runtimeConstant>
        <name>lit$0</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>2</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$1</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>3</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$2</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0.14</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$3</name>
        <cppType>SPL::float64</cppType>
        <splType>float64</splType>
        <value>0.85</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$4</name>
        <cppType>SPL::uint32</cppType>
        <splType>uint32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$5</name>
        <cppType>SPL::int32</cppType>
        <splType>int32</splType>
        <value>0</value>
      </runtimeConstant>
      <runtimeConstant>
        <name>lit$6</name>
        <cppType>SPL::list&lt;SPL::rstring &gt;</cppType>
        <splType>list&lt;rstring&gt;</splType>
        <value>["Hello", "Hello world", "Hello world this", "Hello world this is", "Hello world this is a", "Hello world this is a demo", "This is working", "Speech recognition", "Speech recognition toolkit", "Demo complete"]</value>
      </runtimeConstant>
    </runtimeConstants>
    <sourceLocation>
      <file>BasicDemo.spl</file>
      <line>51</line>
      <column>9</column>
    </sourceLocation>
    <productVersion>7.2.0.0</productVersion>
    <checkpointKind>none</checkpointKind>
  </context>
  <parameters/>
  <inputPorts>
    <inputPort>
      <index>0</index>
      <tupleCppName>iport$0</tupleCppName>
      <tupleCppType>SPL::BWS8pWC_1HYKrTViSTcG4T5GFz_0nGxqvmNlrajI9k_1E5zHNl9YbvsoTe9P3EfS_0f6OzRd8ZZzCJBaSXCG5A8XGA6</tupleCppType>
      <tupleSPLType>tuple&lt;blob audio,uint64 audioTimestamp&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>BasicDemo.spl</file>
        <line>52</line>
        <column>66</column>
      </sourceLocation>
      <tupleLogic>{
    if ((state$counter &lt; ::SPL::Functions::Collections::size(state$demoTexts))) 
        {
            do { SPL::BpSUw8mfEcWf02DHxFXcAEfeiSinvo2iyOrm4KEfBRvnHy4jMGnM6au_0nCr0kf7SJp_1QitTcsqIopJSCi7aPgAg temp = SPL::BpSUw8mfEcWf02DHxFXcAEfeiSinvo2iyOrm4KEfBRvnHy4jMGnM6au_0nCr0kf7SJp_1QitTcsqIopJSCi7aPgAg(state$demoTexts.at(state$counter), (SPL::int32(state$counter % lit$1) == lit$0), (lit$3 + (::SPL::Functions::Math::random() * lit$2)), iport$0.get_audioTimestamp()); submit (temp, lit$4); } while(0);
            state$counter++;
        }
}
</tupleLogic>
      <attributes>
        <attribute>
          <name>audio</name>
          <cppType>SPL::blob</cppType>
          <splType>blob</splType>
        </attribute>
        <attribute>
          <name>audioTimestamp</name>
          <cppType>SPL::uint64</cppType>
          <splType>uint64</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="audio" type="blob"/>
        <tt:attr name="audioTimestamp" type="uint64"/>
      </tuple>
    </inputPort>
  </inputPorts>
  <outputPorts>
    <outputPort>
      <index>0</index>
      <tupleCppName>oport$0</tupleCppName>
      <tupleCppType>SPL::BpSUw8mfEcWf02DHxFXcAEfeiSinvo2iyOrm4KEfBRvnHy4jMGnM6au_0nCr0kf7SJp_1QitTcsqIopJSCi7aPgAg</tupleCppType>
      <tupleSPLType>tuple&lt;rstring text,boolean isFinal,float64 confidence,uint64 audioTimestamp&gt;</tupleSPLType>
      <facade>false</facade>
      <mutationAllowed>true</mutationAllowed>
      <sourceLocation>
        <file>BasicDemo.spl</file>
        <line>51</line>
        <column>9</column>
      </sourceLocation>
      <attributes>
        <attribute>
          <name>text</name>
          <cppType>SPL::rstring</cppType>
          <splType>rstring</splType>
        </attribute>
        <attribute>
          <name>isFinal</name>
          <cppType>SPL::boolean</cppType>
          <splType>boolean</splType>
        </attribute>
        <attribute>
          <name>confidence</name>
          <cppType>SPL::float64</cppType>
          <splType>float64</splType>
        </attribute>
        <attribute>
          <name>audioTimestamp</name>
          <cppType>SPL::uint64</cppType>
          <splType>uint64</splType>
        </attribute>
      </attributes>
      <tuple>
        <tt:attr name="text" type="rstring"/>
        <tt:attr name="isFinal" type="boolean"/>
        <tt:attr name="confidence" type="float64"/>
        <tt:attr name="audioTimestamp" type="uint64"/>
      </tuple>
      <finalPunctuationPortScope>
        <port>0</port>
      </finalPunctuationPortScope>
      <exceptionPort>false</exceptionPort>
    </outputPort>
  </outputPorts>
  <exceptionPorts/>
</operatorInstanceModel>
